# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import unforgetable_pb2 as unforgetable__pb2


class Service1Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.function1 = channel.unary_unary(
                '/unforgetable.Service1/function1',
                request_serializer=unforgetable__pb2.requestType1.SerializeToString,
                response_deserializer=unforgetable__pb2.returnType1.FromString,
                )
        self.function2 = channel.unary_unary(
                '/unforgetable.Service1/function2',
                request_serializer=unforgetable__pb2.requestType2.SerializeToString,
                response_deserializer=unforgetable__pb2.returnType2.FromString,
                )


class Service1Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def function1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def function2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Service1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'function1': grpc.unary_unary_rpc_method_handler(
                    servicer.function1,
                    request_deserializer=unforgetable__pb2.requestType1.FromString,
                    response_serializer=unforgetable__pb2.returnType1.SerializeToString,
            ),
            'function2': grpc.unary_unary_rpc_method_handler(
                    servicer.function2,
                    request_deserializer=unforgetable__pb2.requestType2.FromString,
                    response_serializer=unforgetable__pb2.returnType2.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unforgetable.Service1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service1(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def function1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unforgetable.Service1/function1',
            unforgetable__pb2.requestType1.SerializeToString,
            unforgetable__pb2.returnType1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def function2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unforgetable.Service1/function2',
            unforgetable__pb2.requestType2.SerializeToString,
            unforgetable__pb2.returnType2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class Service2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.function1 = channel.unary_unary(
                '/unforgetable.Service2/function1',
                request_serializer=unforgetable__pb2.requestType1.SerializeToString,
                response_deserializer=unforgetable__pb2.returnType2.FromString,
                )
        self.function2 = channel.unary_unary(
                '/unforgetable.Service2/function2',
                request_serializer=unforgetable__pb2.requestType2.SerializeToString,
                response_deserializer=unforgetable__pb2.returnType1.FromString,
                )


class Service2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def function1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def function2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Service2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'function1': grpc.unary_unary_rpc_method_handler(
                    servicer.function1,
                    request_deserializer=unforgetable__pb2.requestType1.FromString,
                    response_serializer=unforgetable__pb2.returnType2.SerializeToString,
            ),
            'function2': grpc.unary_unary_rpc_method_handler(
                    servicer.function2,
                    request_deserializer=unforgetable__pb2.requestType2.FromString,
                    response_serializer=unforgetable__pb2.returnType1.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unforgetable.Service2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def function1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unforgetable.Service2/function1',
            unforgetable__pb2.requestType1.SerializeToString,
            unforgetable__pb2.returnType2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def function2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unforgetable.Service2/function2',
            unforgetable__pb2.requestType2.SerializeToString,
            unforgetable__pb2.returnType1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
